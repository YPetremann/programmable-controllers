[pc-docs]
menu_pc-docs=Programmable Controllers
title_pc-docs=Programmable Controllers
page_pc_docs_text_1=Programmable controllers is a mod about programming circuits.\nSometimes controllers are more powerfull and efficient comparing to combinators, sometimes combinators are a prefered choice for simplier problems.\nIt's up to you to decide which solution would be preferable, but don't forget that each need some works to make a working system and sometimes both are needed.
page_pc_docs_head_2=Components
page_pc_docs_text_3=Each controllers are made of components to fulfill their task.\nThey must at least have a power and a cpu component.\nSee each components pages to see their roles.\nFor now simply place the components next to each other to create a controller.
page_pc_docs_head_4=Memory
page_pc_docs_text_5=Each components contain a fixed ammount of memory, in fact every component have the same ammount of memory (excluding power and extensions), those memory is at the same time where instructions and data are saved.\nModifying some components's memory by hand or with a program can affect their behaviour. Some memory can even change themselves without interaction depending of some specific events making them a way to get informations about the surrounding environment.
page_pc_docs_head_6=Instructions
page_pc_docs_text_7=A controller cpu execute instructions provided in their memory, each instructions serve a specific task and does thing on memory, somes permit to sleep and wait for an event, others allow mathematical operations, with the good combination of components you could display informations or play some music.
page_pc_docs_head_8=Editor
page_pc_docs_text_9=When you open any components, you can see an interface on the left of your screen, this is the editor.\nThe editor let you see and edit your program without having to use the component's slots, each line correspond to a slot, begining with the memory address which is really important, the content and finaly the value. the content can be an instruction like NOP#, an item like I:wooden-chest or a virtual signal like V:signal-red.\nLines can start with # which make them act as comments, keep in mind that comments can't be saved in the controller and will simply be ignored, when you open the editor it will create a comment for each component to differenciate them.

menu_examples=Examples
title_examples=Controller examples
page_examples_text_1=This section showcase some examples of controllers:\n - A simple traffic light\n - A dual traffic light

menu_simple_trafic_lights=Simple trafic light
title_simple_trafic_lights=Simple trafic light
page_simple_trafic_lights_text_1=Here the blueprint of the simple trafic lights: __1__

menu_dual_trafic_lights=Dual trafic light
title_dual_trafic_lights=Dual trafic light
page_dual_trafic_lights_text_1=Here a section describing each components available for your controllers

menu_components=Components
title_components=Controller components
page_components_text_1=Here a section describing each components available for your controllers

menu_power=Power
title_power=Controller power
page_power_text_1=A

menu_cpu=Cpu
title_cpu=Controller cpu
page_cpu_text_1=A

menu_memory=Memory
title_memory=Controller Memory
page_memory_text_1=A

menu_connector=Connector
title_connector=Controller Connector
page_connector_text_1=A

menu_extension=Extension
title_extension=Controller Extension
page_extension_text_1=A

menu_instructions=Instructions
title_instructions=Controller instructions
page_instructions_text_1=A

menu_register=Register
title_register=Register instructions
page_register_text_1=A

menu_control=Control
title_control=Control instructions
page_control_text_1=A

menu_branching=Branching
title_branching=Branching instructions
page_branching_text_1=A

menu_simple_math=Simple maths
title_simple_math=Simple maths instructions
page_simple_math_text_1=A

menu_binary=Binary
title_binary=Binary instructions
page_binary_text_1=A